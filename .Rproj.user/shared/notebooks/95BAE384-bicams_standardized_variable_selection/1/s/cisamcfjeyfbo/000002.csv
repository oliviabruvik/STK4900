"0",""
"0","## rim_regions <- regions('EDSS_log', rim_data.x, rim_data)"
"0",""
"0","# extracting regions and p-values"
"0","get_glm_results <- function(test, data, tlv) {"
"0","  set.seed(12)"
"0"," "
"0","  data.x <- data %>%"
"0","    dplyr::select(-colnames(bicams_patient_data))"
"0","  "
"0","  if (cort) {"
"0","    data.x$cort <- data$cort"
"0","    data <- filter(data, cort != 0)"
"0","    data.x <- filter(data.x, cort != 0)"
"0","  }"
"0","  "
"0","  if (n_rim == 'binary' | n_rim == 'digit') {"
"0","    data.x$n_rim <- data$n_rim"
"0","  }"
"0","  "
"0","  "
"0","  if (tlv) {"
"0","    data.x$log_tlv <- data[,tlv_type]"
"0","  }"
"0","  "
"0","  # if (tlv) {"
"0","  #   data.x <- data %>%"
"0","  #     dplyr::select(starts_with('region') | starts_with(tlv_type))"
"0","  #   } else {"
"0","  #     data.x <- data %>%"
"0","  #       dplyr::select(starts_with('region'))"
"0","  #   }"
"0","  "
"0","  # center x"
"0","  x <- as.matrix(data.x)"
"0","  x <- scale(x,TRUE,TRUE)"
"0","  y <-  unlist(dplyr::select(data, all_of(test))) #y <-  data[[test]]"
"0","  n <- dim(x)[1]"
"0","  "
"0","  cvfit <- cv.glmnet(x = x, "
"0","                    y = y)"
"0","  "
"0","  gfit <- glmnet(x = x,"
"0","                y = y,"
"0","                standardize = FALSE)"
"0","                #standardize = TRUE)"
"0","  "
"0","  beta <- coef(gfit,"
"0","               x = x,"
"0","               y = y,,"
"0","               s = cvfit$lambda.min,"
"0","               exact = TRUE)[-1]"
"0","  "
"0","  sigmahat <- estimateSigma(x = x,"
"0","                            y = y,"
"0","                            intercept = TRUE,"
"0","                            standardize = FALSE)$sigmahat"
"0","                            #standardize = TRUE)$sigmahat"
"0","  "
"0","  pvalues <- try(fixedLassoInf(x = x,"
"0","                           y = y,"
"0","                           beta = beta,"
"0","                           lambda = cvfit$lambda.min * n,"
"0","                           sigma = sigmahat,"
"0","                           intercept = TRUE,"
"0","                           type='partial')) #'full')"
"0",""
"0"," if (class(pvalues) == 'try-error') {"
"0","   glm_results <- pvalues[1]"
"0"," } else {"
"0","   glm_results <- data.frame(regions = names(pvalues$vars), "
"0","                              coef = as.numeric(pvalues$coef0),"
"0","                              p_values = pvalues$pv) %>%"
"0","    filter(regions != tlv_type)"
"0","  "
"0","  labels <- getEveMapLabels(type='I') %>%"
"0","    dplyr::mutate(regions = paste0('region_', integer_label)) %>%"
"0","    dplyr::select(regions, text_label, region_labels = integer_label)"
"0","  "
"0","  glm_results <- glm_results %>%"
"0","    filter(p_values <= 0.05)"
"0","  "
"0","  #plots(test, glm_results, data)"
"0","  "
"0","  glm_results <- glm_results %>%"
"0","    left_join(labels) %>%"
"0","    kbl(col.names = c('Regions', 'Coefficient', 'P-value', 'Region', 'Region label'),"
"0","        caption = paste0('Selected regions for ', i)) %>%"
"0","        #position = h) %>%"
"0","    kable_styling()"
"0","  }"
"0","  "
"0","  return(glm_results)"
"0","}"
"0",""
"0",""
"0","## mapping regions"
"0","atlas <- function(test, glm_results, text) {"
"0","  regions <- glm_results[,'region_labels']"
"0","  map <- readEveMap(type='I')"
"0","  map[!(map %in% regions)] <- 0"
"0","  if (length(regions) == 0) {"
"0","    print(paste0('There were no regions selected in the analysis of ', text))"
"0","  } else {"
"0","    ortho2(eve_t1, map, text = text, legend = 'lesions')"
"0","  }"
"0","}"
"0",""
"0","# plotting test scores"
"0","plots <- function(test, glm_results, data) {"
"0","  regions <- glm_results[,'regions']"
"0","  for (i in regions) {"
"0","    ab <- lm(data[[i]] ~ data[[test]])"
"0","    plot(data[[i]], data[[test]], ylab = paste0(test,' score'), xlab = 'Percent Coverage', main = paste0('Region ', i))"
"0","    abline(ab)"
"0","    }"
"0","}"
"0",""
